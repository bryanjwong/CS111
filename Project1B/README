NAME: Bryan Wong
EMAIL: bryanjwong@g.ucla.edu
ID: 805111517

Included Files:

  1) lab1b-client.c
  =================
  C program that configures launches interactive client. Once a TCP connection
  to the server at the specified port is made, user input is sent to the server.

  Usage: ./lab1b-client --port=portnum [--log=filename] [--compress]

  --log option
  ============
  If the --log option is given an argument, the file specified will be created
  if it does not exist and appended to with transmission data as it occurs. The
  resulting log file will have the following format:

    SENT 1 bytes: l
    SENT 1 bytes: s
    SENT 1 bytes:

    RECEIVED 3 bytes: foo
    ...

  --compress option
  =================
  If the --compress option is specified, the user input will be compressed
  before being sent to the server. The data received from the server will also
  be decompressed after being received, so make sure the '--compress' option
  is specified on ./lab1b-server as well.

  2) lab1b-server.c
  =================
  C program that configures launches server. Once a TCP connection to the client
  at the specified port is made, receive client input and process it, returning
  the output to the client.

  Usage: ./lab1b-server --port=portnum [--shell=program] [--compress]

  --shell option
  ==============
  If the --shell program argument is specified, that program is executed and
  connected to keyboard input using pipes. This allows for keyboard input to be
  passed into a shell program, such as /bin/bash, resulting in the shell output
  being displayed in stdout.

  Upon receiving the ^C input, a SIGINT kill signal will be sent to the shell.
  Upon receiving the ^D (EOF) input, the pipe to the shell will be closed but
    input from the shell will continue to be processed. Once that input reaches
    EOF, the program will exit.

  Upon program exit, the shell's status will be collected using wait() and
    displayed in the following format:

      SHELL EXIT SIGNAL=# STATUS=#

  If no --shell option is specified, the server will simply echo back the input
  to the client.

  --compress option
  =================
  Data sent to the server will be decompressed before being processed. The
  processed data will then be compressed and sent to the client.

  3) Makefile
  ===========
  The Makefile includes the following targets:

    default               compiles lab1b-client.c and lab1b-server into
                          executables

    clean                 removes files generated by this Makefile

    dist                  generates the submission tar file

Sources
=======
man7.org: reference material for various system calls and C library functions
cs.rpi.edu/~moorthy/: socket programming tutorial
zlib.net: zlib tutorial and documentation
bolet.org: more information about zlib
